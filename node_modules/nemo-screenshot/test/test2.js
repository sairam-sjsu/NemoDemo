'use strict';

var Nemo = require('nemo');
var nemo;
var assert = require('assert');
var fs = require('fs');
var glob = require('glob');
var rm = require('rimraf');
var path = require('path');
var basedir = __dirname;
var config = {
	plugins: {
		screenshot: {
			module: 'path:../index',
			arguments: ['path:report', ['exception']]
		}
	},
	driver: {
		browser: 'phantomjs'
	}
};
var cleaner = function (cb) {
	rm(path.resolve(__dirname, 'report'), {}, function (err) {
		if (err) {
			return cb(err);
		}
		cb();
	})
};
describe('nemo-screenshot2', function () {
	before(function (done) {
		cleaner(function (err) {
			if (err) {
				return done(err);
			}
			nemo = Nemo(basedir, config, function (err) {
				if (err) {
					done(err);
				} else {
					done();
				}
			});
		})


	});

	it('will use @donez@error@ to take a screenshot in an error scenario', function (done) {
		nemo.screenshot.done('goog', function fakeDone(err) {
			assert(err.stack.indexOf('nemo-screenshot') !== -1);
			assert(fs.statSync(path.resolve(__dirname, 'report/goog.png')));
			done();
		}, new Error('my error'));
	});

});
